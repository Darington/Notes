}
varContri=s/sum(s)
varContri
head(X)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
varContri
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
hist(Type)
hist(Type)
hist(Type)
hist(Type)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
hist(Type)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
x1=X[X[,2]==i, ]
x1
range(x1)
range(x1[,1])
length(which(x1[,1]>5))
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[1,] > 0))
mat[i,1] = nrow(x1)-length(idx)
mat[i,2] = length(idx)
}
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[1,] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
mat
x1
c1
which(x1[1,]>0)
x1
which(x1[1,]>0)
head(x1)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[,1] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
mat
barplot(x1)
barplot(t(x1))
barplot(t(mat))
layout(matrix(1:2, 2, 1))
barplot(t(mat))
barplot(s)
layout(matrix(1:2, 2, 1))
barplot(t(-1mat))
barplot(s)
layout(matrix(1:2, 2, 1))
barplot(s)
barplot(t(-1*mat))
layout(matrix(1:2, 2, 1))
barplot(varContri)
barplot(t(-1*mat))
barplot(t(-1*mat), border = F)
layout(matrix(1:2, 2, 1))
barplot(varContri)
barplot(t(-1*mat), border = F)
par(mai=c(0, 0.5, 0.5, 0))
layout(matrix(1:2, 2, 1))
par(mai=c(0, 0.5, 0.5, 0))
barplot(varContri)
par(mai=c(0.5, 0.5, 0, 0))
barplot(t(-1*mat), border = F)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[,1] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
layout(matrix(1:2, 2, 1))
par(mai=c(0, 0.5, 0.5, 0))
barplot(varContri, border = F)
par(mai=c(0.5, 0.5, 0, 0))
barplot(t(-1*mat), border = F)
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[,1] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
layout(matrix(1:2, 2, 1))
par(mai=c(0, 0.5, 0.5, 0))
barplot(varContri, border = F)
par(mai=c(0.5, 0.5, 0, 0))
barplot(t(-1*mat), border = F, col=c("yellow", "blue"))
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[,1] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
layout(matrix(1:2, 2, 1))
par(mai=c(0, 0.5, 0.5, 0))
barplot(varContri, border = F, ylab="% variation")
par(mai=c(0.5, 0.5, 0, 0))
barplot(t(-1*mat), border = F, col=c("yellow", "blue"))
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[,1] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
layout(matrix(1:2, 2, 1))
par(mai=c(0, 1, 0.5, 0))
barplot(varContri, border = F, ylab="% variation")
par(mai=c(0.5, 1, 0, 0))
barplot(t(-1*mat), border = F, col=c("yellow", "blue"))
n=1000
EV=scale(rnorm(n))
Type=floor(runif(n, 1, 8)+0.5)
X=matrix(c(scale(EV), Type), n, 2)
s=array(0, dim=length(table(Type)))
for(i in 1:length(s))
{
s[i]=sum(X[X[,2]==i, 1]^2)
}
varContri=s/sum(s)
print(varContri)
mat=matrix(0, nrow=length(s), ncol=2)
for(i in 1:length(s))
{
x1=X[X[,2]==i, ]
c1=length(which(x1[,1] > 0))
mat[i,1] = nrow(x1)-c1
mat[i,2] = c1
}
layout(matrix(1:2, 2, 1))
par(mai=c(0.2, 1, 0.5, 0))
barplot(varContri, border = F, ylab="% variation")
par(mai=c(0.5, 1, 0.2, 0))
barplot(t(-1*mat), border = F, col=c("yellow", "blue"))
install.packages("Rtools")
install.packages("Rtools")
install.packages("~/manuscript/EigenGWAS/EigenGWAS_Package/EigenGWASFriends_0.1.0.tar.gz", type-"source", repos=NULL)
install.packages("~/manuscript/EigenGWAS/EigenGWAS_Package/EigenGWASFriends_0.1.0.tar.gz", type="source", repos=NULL)
library(EigenGWASFriends)
data(tt)
tt
install.packages("~/git/EigenGWASFriends_0.1.0.tar.gz", repos = NULL, type = "source")
library(EigenGWASFriends)
help("read.table")
install.packages("~/git/EigenGWASFriends_0.1.0.tar.gz", repos = NULL, type = "source")
install.packages("~/git/EigenGWASFriends_0.1.0.tar.gz", repos = NULL, type = "source")
library(EigenGWASFriends)
detach("package:EigenGWASFriends", unload=TRUE)
library("EigenGWASFriends", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages("~/git/proQC_0.1.0.tar.gz", repos = NULL, type = "source")
qchisq(1.6e-148,1)
qchisq(1.6e-148,1, lower.tail = F)
qchisq(1.65e-149,1, lower.tail = F)
install.packages("~/git/EigenGWASFriends_0.1.0.tar.gz", repos = NULL, type = "source")
library("OATH", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:OATH", unload=TRUE)
detach("package:methods", unload=TRUE)
library("EigenGWASFriends", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
qchisq(1.65e-149, 1, lower.tail = F)
pnorm(40)
pnorm(20)
pnorm(10)
pnorm(5)
pnorm(3)
pnorm(2)
pnorm(2.1)
pnorm(5)
pnorm(8)
install.packages("~/git/EigenGWASFriends_0.1.0.tar.gz", repos = NULL, type = "source")
library(EigenGWASFriends)
help(aim)
install.packages("~/git/EigenGWASFriends_0.1.0.tar.gz", repos = NULL, type = "source")
library("EigenGWASFriends")
setwd("~/git/Notes/StG/Day1PM")
RunEigenGWAS("Arab/arab", PC = 5, gearPath = "Arab/")
setwd("~/git/Notes/StG/Day1PM")
FN="arab"
RunEigenGWAS("arab", PC = 5)
pcMatPlot(FN, c(1:5))
EigenValuePlot(FN, 5)
FN="arab"
RunEigenGWAS("arab", PC = 5, inbred = T)
pcMatPlot(FN, c(1:5))
EigenValuePlot(FN, 5)
EigenGWASPlot(FN, pc = 1)
SWEigenGWASPlot(FN, pc = 1, kb = 10)
FN2="ceu_tsi"
RunEigenGWAS(FN2, PC = 5, inbred = T)
pcMatPlot(FN2, c(1:5))
EigenValuePlot(FN2, 5)
